# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    working_directory: ~/helloapi
    environment:
      NODE_ENV: 'test'
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:15.1
      - image: mongo:4.1.6-xenial
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Run Tests
          command: npm run test

  deploytodocker:
    working_directory: ~/helloapi
    environment:
      NODE_ENV: 'test'
    docker:
      - image: cimg/node:15.1
    steps:
      - setup_remote_docker
      - run:
          name: Build & Push Docker image
          command: |
            set +x
            docker build -t quay.io/$DOCKER_LOGIN/hello-api:latest .
            echo $DOCKER_PWD | docker login quay.io -u $DOCKER_LOGIN --password-stdin
            docker push quay.io/$DOCKER_LOGIN/hello-api:latest

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  hello-api-ci:
    jobs:
      - test
      - deploytodocker:
        requires:
          - test
